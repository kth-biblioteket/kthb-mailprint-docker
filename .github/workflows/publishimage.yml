# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Create and publish Docker image

on:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
  deploy:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    env:
      SSH_OPTIONS: -o "GSSAPIAuthentication=yes" -o "GSSAPIDelegateCredentials=yes" -o "GSSAPIKeyExchange=yes"
    steps:
      - name: deploy to kthb sitesd
        uses: appleboy/ssh-action@master # An action made to control Linux servers
        with: # We set all our secrets here for the action, these won't be shown in the action logs
              host: sites.lib.kth.se
              username: ${{ vars.KTHB_USER }}
              password: ${{ secrets.KTHB_PW }}
              port: 8967
              script: |
                cd ./docker/mailprint # we move into our app's folder
                ls -la
                docker compose pull
                docker compose up -d
        
      #- name: Install Kerberos dependencies
      #  run: sudo apt-get install -y krb5-user
        
      #- name: Authenticate with Kerberos
      #  run: | 
      #    echo ${{ secrets.KB_PW }} | kinit ${{ vars.KB_USER }}

      #- name: Run command on server
      #  run: |
      #    ssh -o "GSSAPIAuthentication=yes" \
      #        -o "GSSAPIDelegateCredentials=yes" \
      #        -o "GSSAPIKeyExchange=yes" \
      #        tholind@kthb-apps-1-r.referens.sys.kth.se '
      #        cd ..
      #        ls -la
      #        '
